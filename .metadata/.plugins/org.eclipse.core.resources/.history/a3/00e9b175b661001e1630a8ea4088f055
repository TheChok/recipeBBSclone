package com.make.board.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.make.board.dto.BoardDTO;
import com.make.board.dto.PageDTO;
import com.make.board.service.BoardService;

import lombok.RequiredArgsConstructor;


// public class BoardController
@Controller
@RequiredArgsConstructor
@RequestMapping("/board")
public class BoardController {
	private final BoardService boardService;
	
	// 게시글 작성 페이지 이동
	@GetMapping("/save")
	public String saveForm() {
		return "saveForm";
	}
	
	// 게시글 작성 처리
	@PostMapping("/save")
	public String save(@ModelAttribute BoardDTO boardDTO) {
		int saveResult = boardService.save(boardDTO);
		
		if(saveResult > 0) {
			return "redirect:/board/list";
		} else {
			return "save";
		}
	}
	
	// 목록 이동
	@GetMapping("/list")
	public String findAll(Model m) {
		List<BoardDTO> boardList = boardService.findAll();
		m.addAttribute("boardList", boardList);
		return "list";
	}
	
	// 게시글 상세 페이지
	@GetMapping("/detail")
	@Transactional
	public String detail(@RequestParam("id") Long id, Model m) {
		boardService.updateHits(id);
		BoardDTO boardDTO = boardService.findById(id);
		m.addAttribute("board", boardDTO);
		return "detail";
	}
	
	// 게시글 삭제
	@GetMapping("/delete")
	public String delete(@RequestParam("id") Long id) {
		boardService.delete(id);
		return "redirect:/board/list/";
	}
	
	// 게시글 수정 페이지 이동
	@GetMapping("/update")
	public String updateForm(@RequestParam("id") Long id, Model m) {
		BoardDTO boardDTO = boardService.findById(id);
		m.addAttribute("board", boardDTO);
		return "updateForm";
	}
	
	// 게시글 수정
	@PostMapping("/update")
	@Transactional
	public String update(@ModelAttribute BoardDTO boardDTO, Model m) {
		boardService.update(boardDTO);
		BoardDTO board = boardService.findById(boardDTO.getId());
		m.addAttribute("board", board);
		
		return "detail";
	}
	
	// 페이징 화면
	@GetMapping("/paging")
	public String paging(Model m, @RequestParam(value="page", required=false, defaultValue="1") int page) {
		PageDTO pageDTO 		= boardService.pageParam(page);
		List<BoardDTO> pageList = boardService.pageList(page);
		
		m.addAttribute("pageDTO", pageDTO);
		m.addAttribute("pageList", pageList);
		
		return "index";
	}
	
	
	
	
	
} // End - public class BoardController
